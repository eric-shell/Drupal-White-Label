{#
/**
 * @file
 * Theme override for a field.
 *
 * To override output, copy the "field.html.twig" from the templates directory
 * to your theme's directory and customize it, just like customizing other
 * Drupal templates such as page.html.twig or node.html.twig.
 *
 * Instead of overriding the theming for all fields, you can also just override
 * theming for a subset of fields using
 * @link themeable Theme hook suggestions. @endlink For example,
 * here are some theme hook suggestions that can be used for a field_foo field
 * on an article node type:
 * - field--node--field-foo--article.html.twig
 * - field--node--field-foo.html.twig
 * - field--node--article.html.twig
 * - field--field-foo.html.twig
 * - field--text-with-summary.html.twig
 * - field.html.twig
 *
 * Available variables:
 * - attributes: HTML attributes for the containing element.
 * - label_hidden: Whether to show the field label or not.
 * - title_attributes: HTML attributes for the title.
 * - label: The label for the field.
 * - multiple: TRUE if a field can contain multiple items.
 * - items: List of all the field items. Each item contains:
 *   - attributes: List of HTML attributes for each item.
 *   - content: The field item's content.
 * - entity_type: The entity type to which the field belongs.
 * - field_name: The name of the field.
 * - field_type: The type of the field.
 * - label_display: The display settings for the label.
 *
 * @see template_preprocess_field()
 */
#}

<div class="tabs">

  <ul class="tab__titles list-to-select" role="tablist">
    {% for item in items %}
      <li
        role="tab"
        type="button"
        tabindex="0"
        id="tab{{element['#object'].id.value}}__label--{{loop.index}}"
        class="tab__title h5 {% if loop.index == '1' %}active{% endif %}"
        aria-selected="{% if loop.index == '1' %}true{% else %}false{% endif %}"
        aria-controls="tab{{element['#object'].id.value}}__panel--{{loop.index}}"
      >
        {{ item.content['#paragraph'].field_label.entity.field_label.0.value }}
      </li>
    {% endfor %}
  </ul>

  <div class="tab__contents">
    {% for item in items %}
      <div
        role="tabpanel"
        id="tab{{element['#object'].id.value}}__panel--{{loop.index}}"
        class="tab__content{% if loop.index == '1' %} active{% endif %}"
        tabindex="{% if loop.index != '1' %}-1{% endif %}"
        aria-labelledby="tab{{element['#object'].id.value}}__label--{{loop.index}}"
      >
        {{ item.content['#paragraph'].field_body.entity.field_body.0.value|raw }}
      </div>
    {% endfor %}
  </div>

</div>
